AWSTemplateFormatVersion: '2010-09-09'
Description: Stack to hold the Home Page web application for the EPT.

# This stack starts a single EC2 instance. It's intent is to demonstrate
# how to use USERDATA.

Parameters:
  pInstanceType:
    Description: "EC2 instance type"
    Type: String
    Default: t2.nano
  pAMI:
    Description: "CentOS AMI to use"
    Type: String
    Default: ami-6d1c2007
  pKeyname:
    Description: "PKI Key to use for SSH"
    Type: String
    Default: bogart-dmedinets

Resources:
  rLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      EbsOptimized: false
      IamInstanceProfile: !ImportValue app-02-role-readonly-codecommit-ecr-s3-stack:instance-profile
      ImageId: !Ref pAMI
      InstanceMonitoring: false
      InstanceType: !Ref pInstanceType
      KeyName: !Ref pKeyname
      SecurityGroups:
        - !ImportValue app-03-security-groups-stack:world-incoming-ssh-sg
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          echo "Waiting for Network"
          until ping -w300 -c1 www.google.com &>/dev/null; do :; done

          yum install -y curl git unzip

          # Install Docker
          yum install -y yum-utils
          yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
          yum makecache fast
          yum install -y docker-ce
          systemctl start docker
          usermod -aG docker centos
          echo "Docker Installed"

          curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip
          unzip awscli-bundle.zip
          ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
          rm awscli-bundle.zip
          echo "AWS CLI Installed"

          echo "Setting Credential Helper"
          su centos -c "git config --global credential.helper '!aws codecommit credential-helper \$@'"
          su centos -c "git config --global credential.UseHttpPath true"

          ###############################
          # place project specific commands here.
          ###############################

          touch /tmp/user-data-executed

  rAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref rLaunchConfiguration
      MaxSize: 4
      MinSize: 1
      Tags:
        - Key: Name
          Value: !Ref "AWS::StackName"
          PropagateAtLaunch: true
        - Key: ssh-user
          Value: centos
          PropagateAtLaunch: true
      VPCZoneIdentifier:
        - !ImportValue app-01-vpc-stack:public-subnet-a
        - !ImportValue app-01-vpc-stack:public-subnet-b
    DependsOn:
      - rLaunchConfiguration
